# Makefile for cyrus imap server and associated programs
# $Id: Makefile.in,v 1.84 2000/01/28 22:09:42 leg Exp $
# 
# @configure_input@
#
# Copyright 1998 Carnegie Mellon University
# 
# No warranties, either expressed or implied, are made regarding the
# operation, use, or results of the software.
#
# Permission to use, copy, modify and distribute this software and its
# documentation is hereby granted for non-commercial purposes only
# provided that this copyright notice appears in all copies and in
# supporting documentation.
#
# Permission is also granted to Internet Service Providers and others
# entities to use the software for internal purposes.
#
# The distribution, modification or sale of a product which uses or is
# based on the software, in whole or in part, for commercial purposes or
# benefits requires specific, additional permission from:
#
#  Office of Technology Transfer
#  Carnegie Mellon University
#  5000 Forbes Avenue
#  Pittsburgh, PA  15213-3890
#  (412) 268-4387, fax: (412) 268-7395
#  tech-transfer@andrew.cmu.edu
# 
DEFINES=-DSETPROCTITLE

# \Seen state database.  Only one choice for now:
SEEN=seen_local.o

# New mail notification mechanism
NOTIFY=notify_@WITH_NOTIFY@.o

srcdir = @srcdir@
VPATH = @srcdir@

CC = @CC@
INSTALL = @INSTALL@
RANLIB = @RANLIB@

CYRUS_USER=@cyrus_user@
CYRUS_GROUP=@cyrus_group@

DEFS = @DEFS@ @LOCALDEFS@
CPPFLAGS = -I. -I$(srcdir) -I$(srcdir)/../lib -I$(srcdir)/../acap @COM_ERR_CPPFLAGS@ @SIEVE_CPPFLAGS@ @CPPFLAGS@ @SASLFLAGS@
IMAP_LIBS = @IMAP_LIBS@
SIEVE_LIBS = @SIEVE_LIBS@
IMAP_COM_ERR_LIBS = @IMAP_COM_ERR_LIBS@
LIBS = $(IMAP_LIBS) $(IMAP_COM_ERR_LIBS)
DEPLIBS = ../acap/libacap.a ../lib/libcyrus.a @DEPLIBS@

CFLAGS = @CFLAGS@
LDFLAGS = @LDFLAGS@ @CFLAGS@ @COM_ERR_LDFLAGS@ 

SHELL = /bin/sh
MAKEDEPEND = @MAKEDEPEND@

COMPILE_ET=@COMPILE_ET@

#
# Some notes on purify --
#     you probably want to run the make as the cyrus user as 
#     purify sets the cache directory based on the user. So,
#     if you don't, purify can't find the instrumented libraries
#     and so you don't get any useful information.
#     It may also help to run purify by hand to instrument any of
#     the dynamic libraries that may crop up during run time.
# 
PURIFY=/usr/local/bin/purify
PUREOPT= -best-effort -windows=no -logfile=/tmp/pure/%v.%p.log -always_use_cache_dir
QUANTIFY=/usr/local/bin/quantify
QUANTOPT=-windows=no -filename-prefix=/tmp/quant/%v.%p -write-summary-file= -logfile=/tmp/quant/%v.%p.log

prefix = @prefix@
exec_prefix = @exec_prefix@
cyrus_prefix = @cyrus_prefix@

LOBJS= append.o mailbox.o mboxlist.o mboxname.o message.o \
	config.o imap_err.o proc.o toimsp.o setproctitle.o convert_code.o \
	duplicate.o \
	$(SEEN) $(NOTIFY)

IMAPDOBJS= imapd.o index.o tls.o

PROGS = collectnews syncnews imapd pop3d populateacap \
	arbitron fud reconstruct quota dump_deliverdb mbpath
SUIDPROGS = deliver


all: $(PROGS) $(SUIDPROGS) $(SUGIDPROGS)

install:
	$(srcdir)/../install-sh -d ${DESTDIR}$(cyrus_prefix)/bin
	for file in $(PROGS); \
	do \
		$(INSTALL) @STRIP@ -o $(CYRUS_USER) -g $(CYRUS_GROUP) -m 755 $$file $(DESTDIR)$(cyrus_prefix)/bin || exit 1; \
	done
	$(INSTALL) @STRIP@ -o $(CYRUS_USER) -g $(CYRUS_GROUP) -m 4750 $(SUIDPROGS) $(DESTDIR)$(cyrus_prefix)/bin
	$(INSTALL) -o $(CYRUS_USER) -g $(CYRUS_GROUP) -m 755 feedcyrus $(DESTDIR)$(cyrus_prefix)/bin

.c.o:
	$(CC) -c $(CPPFLAGS) $(DEFS) $(CFLAGS) \
	$<

collectnews: collectnews.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o collectnews collectnews.o libimap.a $(DEPLIBS) \
	 $(LIBS)

collectnews.quant: collectnews.o libimap.a $(DEPLIBS)
	$(QUANTIFY) $(QUANTOPT) \
	   $(CC) $(LDFLAGS) -o collectnews.quant \
	   collectnews.o libimap.a $(DEPLIBS) $(LIBS)

syncnews: syncnews.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o syncnews  syncnews.o libimap.a $(DEPLIBS) \
	 $(LIBS)

deliver: deliver.o libimap.a $(DEPLIBS) $(SIEVE_LIBS)
	$(CC) $(LDFLAGS) -o deliver \
	 deliver.o libimap.a $(DEPLIBS) $(SIEVE_LIBS) $(LIBS)

deliver.pure: deliver.o libimap.a $(DEPLIBS) $(SIEVE_LIBS)
	$(PURIFY) $(PUREOPT) \
	 $(CC) $(LDFLAGS) -o deliver.pure \
	 deliver.o libimap.a $(DEPLIBS) $(SIEVE_LIBS) $(LIBS)

deliver.quant: deliver.o libimap.a $(DEPLIBS) $(SIEVE_LIBS)
	$(QUANTIFY) $(QUANTOPT) \
	 $(CC) $(LDFLAGS) -o deliver.quant \
	 deliver.o libimap.a $(DEPLIBS) $(SIEVE_LIBS) $(LIBS)

dump_deliverdb: dump_deliver.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o \
	 $@ dump_deliver.o libimap.a $(DEPLIBS) $(LIBS)

imapd: $(IMAPDOBJS) libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o imapd \
	 $(IMAPDOBJS) libimap.a $(DEPLIBS) $(LIBS)

proxyd: proxyd.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o proxyd \
	 proxyd.o libimap.a $(DEPLIBS) $(LIBS)

gun: gun.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o gun gun.o libimap.a $(DEPLIBS) $(LIBS)

target: target.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o target target.o libimap.a $(DEPLIBS) $(LIBS)

imapd.pure: $(IMAPDOBJS) libimap.a $(DEPLIBS)
	$(PURIFY) $(PUREOPT) \
	  $(CC) $(LDFLAGS) -o imapd.pure \
	  $(IMAPDOBJS) libimap.a $(DEPLIBS) $(LIBS)

imapd.quant: $(IMAPDOBJS) libimap.a $(DEPLIBS)
	$(QUANTIFY) $(QUANTOPT) \
	$(CC) $(LDFLAGS) -o imapd.quant \
	 $(IMAPDOBJS) libimap.a $(DEPLIBS) $(LIBS)

pop3d: pop3d.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o pop3d pop3d.o libimap.a $(DEPLIBS) $(LIBS)

arbitron: arbitron.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o arbitron arbitron.o libimap.a $(DEPLIBS) $(LIBS)

populateacap: populateacap.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o populateacap populateacap.o libimap.a $(DEPLIBS) $(LIBS)

fud: fud.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o fud fud.o libimap.a $(DEPLIBS) $(LIBS)

mbpath: mbpath.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o mbpath mbpath.o libimap.a $(DEPLIBS) $(LIBS)

reconstruct: reconstruct.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o \
	 reconstruct reconstruct.o libimap.a $(DEPLIBS) $(LIBS)

quota: quota.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o quota quota.o libimap.a $(DEPLIBS) $(LIBS)

updateimsp: updateimsp.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o \
	 updateimsp updateimsp.o libimap.a $(DEPLIBS) $(LIBS)

krbck: krbck.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o krbck krbck.o $(DEPLIBS) $(LIBS)

libimap.a: $(LOBJS)
	rm -f libimap.a
	ar cr libimap.a $(LOBJS)
	$(RANLIB) libimap.a

imap_err.h imap_err.c: imap_err.et
	$(COMPILE_ET) $(srcdir)/imap_err.et

clean:
	rm -f *.o *.a Makefile.bak imap_err.c imap_err.h makedepend.log \
	$(PROGS) $(SUIDPROGS) $(SUGIDPROGS)

# feedcyrus can't be in the config line because it's generated by configure,
# and we can't make it without running configure again.
distclean: clean
	rm -f Makefile feedcyrus

depend: imap_err.h
	${MAKEDEPEND} $(CPPFLAGS) $(DEFS) $(CFLAGS) *.c $(srcdir)/*.c 1>makedepend.log 2>&1

# DO NOT DELETE THIS LINE -- make depend depends on it.
